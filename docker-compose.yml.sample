services:
  neo4j:
    container_name: neo4j
    restart: always
    image: "neo4j:5.26.0-enterprise"
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: <NEO4J_USER>/<NEO4J_PASSWORD>
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
      NEO4J_PLUGINS: '["apoc"]'
      # NEO4J_dbms_ssl_policy_https_enabled: 'true'
      # NEO4J_dbms_ssl_policy_https_trust_all: 'true'
      # NEO4J_dbms_ssl_policy_https_base__directory: /ssl
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      # - ./neo4j/ssl:/ssl
    networks:
      - db_network
      - web_network
  db:
    container_name: db
    restart: always
    image: "mysql"
    ports:
      - "3306:3306"
    volumes:
      - my-db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: <MYSQL_ROOT_PASSWORD>
      MYSQL_DATABASE: WebApp
      MYSQL_USER: <MYSQL_USER>
      MYSQL_PASSWORD: <MYSQL_PASSWORD>
    networks:
      - db_network
  pennet:
    container_name: pennet
    restart: on-failure
    build: .
    volumes:
      - ./apps:/apps
      - uploads_volume:/uploads
    environment:
      - DATABASE_URL=mysql+mysqlconnector://<MYSQL_USER>:<MYSQL_PASSWORD>@db/WebApp
      - DEBUG=True
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - ASSETS_ROOT=/static/assets
      - UPLOAD_FOLDER=/uploads
      - DBS_PATH=/apps/static/assets/dbs
      - THREAT_CATALOG_FILE_NAME=ThreatCatalogComplete.xlsx
      - URI_NEO4J=neo4j://neo4j:7687
      - URI_NEO4J_WSS=neo4j://localhost:7787
      - USER_NEO4J=<NEO4J_USER>
      - PASS_NEO4J=<NEO4J_PASSWORD>
      - TLS_NEO4J=ENCRYPTION_ON
      - JIRA_URL=https://<JIRA_URL>
      - JIRA_PROJECT=<JIRA_PROJECT>
      - JIRA_TICKET_TYPE=<JIRA_TICKET_TYPE>
      - JIRA_USERNAME=<JIRA_USERNAME>
      - JIRA_API_KEY=<JIRA_API_KEY>
      - GITHUB_SECRET=<GITHUB_SECRET>
    networks:
      - db_network
      - web_network
    depends_on:
      - neo4j
      - db
  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "80:80"
      - "443:443"
      - "7787:7787"
    volumes:
      - ./nginx/reverse-proxy-docker.conf:/etc/nginx/conf.d/default.conf
      - ./certs/webapp.crt:/etc/ssl/certs/webapp.crt
      - ./certs/webapp.key:/etc/ssl/private/webapp.key
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - web_network
    depends_on: 
      - pennet
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  my-db:
  uploads_volume:
