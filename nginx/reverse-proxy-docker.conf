upstream pennet {
    server pennet:5000;
}

upstream neo4j {
    server neo4j:7687;
}

server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    return 302 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name localhost;
    ssl_certificate /etc/ssl/certs/webapp.crt;
    ssl_certificate_key /etc/ssl/private/webapp.key;

    ssl_dhparam /etc/nginx/dhparam.pem;

    index index.html index.htm;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header HOST $http_host;
        proxy_pass http://pennet;
        proxy_redirect off;
    }

    location /socket.io/ {
        proxy_pass http://pennet/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
    }
}

server {
    listen 7787 ssl;

    ssl_certificate /etc/ssl/certs/webapp.crt;
    ssl_certificate_key /etc/ssl/private/webapp.key;

    location / {
        proxy_pass http://neo4j; # The Neo4j container is reachable by its name
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
